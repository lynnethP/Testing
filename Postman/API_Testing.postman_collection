{
	"info": {
		"_postman_id": "c1c75141-5ade-45a3-8546-0df4b537b119",
		"name": "API Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27582721",
		"_collection_link": "https://www.postman.com/grey-water-801403/workspace/my-api-testing/collection/27582721-c1c75141-5ade-45a3-8546-0df4b537b119?action=share&creator=27582721&source=collection_link"
	},
	"item": [
		{
			"name": "Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Exist username\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"username\");\r",
							"});\r",
							"\r",
							"pm.test(\"Exist addres\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"addres\");\r",
							"});\r",
							"\r",
							"pm.test(\"Exist city\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"city\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 800ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Comments",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Exits name\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"name\");\r",
							"});\r",
							"\r",
							"pm.test(\"Exits email\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"email\");\r",
							"});\r",
							"\r",
							"pm.test(\"Exits body\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"body\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 900ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/comments",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Photos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Exists albumId\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"albumId\");\r",
							"});\r",
							"\r",
							"pm.test(\"Exists title\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"title\");\r",
							"});\r",
							"\r",
							"pm.test(\"Exists url\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"url\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 800ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/photos",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"photos"
					]
				}
			},
			"response": []
		}
	]
}